@use "src/theme/mixins";

:host {
  width: 100%;
}
.display-group-wrapper {
  display: flex;
  align-items: center;
}
/// In flex box components should try to fill height, but not width (leave to flex property)
.display-group-wrapper > plh-template-component {
  height: 100%;
  width: unset;
}
/// In columns we want the opposite, so that width full but not necessarily height
.display-group-wrapper[data-param-style~="column"] {
  flex-direction: column;
}
.display-group-wrapper[data-param-style~="column"] > plh-template-component {
  height: unset;
  width: 100%;
}
.display-group-wrapper[data-param-style~="wrap"] {
  flex-wrap: wrap;
}

.display-group-wrapper[data-param-style~="nav_bar"] {
  @include mixins.flex-space-between;
  height: 80px;
  margin: var(--tiny-margin) var(--tiny-margin);
}
.display-group-wrapper[data-param-style~="nav_bar"] > plh-template-component {
  height: 70%;
  width: 30%;
}

.display-group-wrapper[data-param-style~="nav_bar_button"] {
  flex-direction: column;
  // justify-content: center;
  // align-items: center;
  height: 100%;
  // width: 30%;
  // opacity: 50%;
  // &.selected {
  //   opacity: 100%;
  // }
}

// Default spacing within display groups. Adapted from `template-component.scss`

.display-group-wrapper[data-param-style~="row"] > plh-template-component:not([data-hidden="true"]) {
  margin: 0 0 0 1em;
}
.display-group-wrapper[data-param-style~="row"]
  > plh-template-component:not([data-hidden="true"]):first-of-type {
  margin: 0;
}

.display-group-wrapper[data-param-style~="column"]
  > plh-template-component:not([data-hidden="true"]) {
  margin: 1em 0 0 0;
}
.display-group-wrapper[data-param-style~="column"]
  > plh-template-component:not([data-hidden="true"]):first-of-type {
  margin: 0;
}
