##################################################################################
#         Configuration
##################################################################################
env:
  DEPLOYMENT_NAME_DEFAULT: "plh_global"
  FIREBASE_CONFIG_TS: ${{secrets.FIREBASE_CONFIG_TS}}


##################################################################################
#         Main Code
##################################################################################
name: Build

# Only keep one active build per ref (e.g. pr branch, push branch, triggering workflow ref)
concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_call:
    inputs:
      artifact-name:
        description: Name of the artifact to upload
        type: string
        default: www
      build-flags:
        description: Additional flags to pass to build command (e.g. base-href)
        type: string
        default: ""
      include-tests:
        description: "Specify whether to include running workspace lint and test before build"
        type: boolean
        default: true
      skip-upload:
        description: "Specify whether to skip uploading build artifact at end"
        type: boolean
        default: false
    outputs:
      DEPLOYMENT_NAME:
        description: "Name of the deployment built"
        value: ${{ jobs.configure_build.outputs.DEPLOYMENT_NAME }}
      GIT_SHA:
        description: "Git SHA of build head"
        value: ${{ jobs.configure_build.outputs.GIT_SHA }}


jobs:
  # Populate variables to use as inputs in next build job
  # Pattern found in this question: https://github.com/actions/runner/issues/998#issue-817330769  
  configure_build:
    outputs:
      DEPLOYMENT_NAME: ${{ steps.configure_build.outputs.DEPLOYMENT_NAME }}
      GIT_SHA: ${{ steps.configure_build.outputs.GIT_SHA }}
    runs-on: ubuntu-latest
    steps:
        # Extract deployment name as the slug of target PR branch via string operators, e.g. /deployment/plh_tz -> plh_tz
        # https://www.linuxjournal.com/article/8919, https://github.com/greenbone/gsa/actions/runs/1277581365/workflow
      - name: Set deployment target from PR target branch
        if: ${{github.base_ref && github.base_ref != 'master'}}
        run: |
          echo "DEPLOYMENT_NAME=${GITHUB_BASE_REF##*/}" >> $GITHUB_ENV;
        shell: bash

      - name: Set default deployment name
        if: ${{ !steps.configure_build.outputs.DEPLOYMENT_NAME }}
        run: |
          echo "DEPLOYMENT_NAME=${GITHUB_BASE_REF##*/}" >> $GITHUB_ENV;
        shell: bash

      # Populate git sha (6-digit short version)
      - name: Set Git SHA for PR
        if: ${{github.base_ref}}
        run: |
          echo "GIT_SHA=`echo ${{github.event.pull_request.head.sha}} | cut -c1-6`" >> $GITHUB_ENV

      - name: Populate Outputs
        run: |
          echo "DEPLOYMENT_NAME=${{env.DEPLOYMENT_NAME}}" >> $GITHUB_OUTPUT;
          echo "GIT_SHA=${{env.GIT_SHA}}" >> $GITHUB_OUTPUT;
    
  build:
    runs-on: ubuntu-latest
    needs: configure_build
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true       

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      # re-assign configuration variables for easier access within future steps
      - name: Set Env
        run: |
          echo "GIT_SHA=$GIT_SHA" >> $GITHUB_ENV
          echo "DEPLOYMENT_NAME=$DEPLOYMENT_NAME" >> $GITHUB_ENV
        env:
          DEPLOYMENT_NAME: ${{ needs.configure_build.outputs.DEPLOYMENT_NAME }}
          GIT_SHA: ${{ needs.configure_build.outputs.GIT_SHA }}

      #############################################################################
      #         Node Modules
      # Manually restore any previous cache to speed install
      # As immutable install will not change cache only save new cache if not hit
      # Uses fine-grained methods from https://github.com/actions/cache
      #############################################################################

      - uses: actions/cache/restore@v3
        id: cache
        with:
          path: ./.yarn/cache
          key: ${{ runner.os }}-node-modules-yarn-v1-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-yarn-v1-
      - name: Install node modules
        run: yarn install --immutable
      - uses: actions/cache/save@v3
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: ./.yarn/cache
          key: ${{ runner.os }}-node-modules-yarn-v1-${{ hashFiles('yarn.lock') }}

      #############################################################################
      #         Prebuild
      # Populate variables and set deployment configuration as required
      # Exact population varies depending on whether is PR, release, dispatch etc.
      #############################################################################

      # TODO - populate firebase as part of deployment set
      - name: Populate firebaseConfig.ts
        if: ${{env.FIREBASE_CONFIG_TS}}
        run: echo $FIREBASE_CONFIG_TS > src/environments/firebaseConfig.ts

      - name: Populate git sha
        if: ${{env.GIT_SHA}}
        run: echo "export const GIT_SHA = \"$GIT_SHA\";" > src/environments/sha.ts

      # Ensure required packages built to enable deployment set
      # TODO - should add implicit dep to scripts when NX added
      - name: Precompile
        run: yarn scripts compile types

      - name: Set deployment
        run: yarn workflow deployment set ${{env.DEPLOYMENT_NAME}}


      #############################################################################
      #         Build
      # Run optional tests before building and uploading final build as artifact
      # for use in other actions
      #############################################################################

      - name: Lint
        if: ${{inputs.include-tests}}
        run: yarn lint && yarn workspace api lint

      - name: Test
        if: ${{inputs.include-tests}}
        run: yarn test:workspaces

      - name: Build
        run: yarn build ${{inputs.build-flags}}

      - name: Upload artifact
        if: ${{!inputs.skip-upload}}
        uses: actions/upload-pages-artifact@v1.0.8
        with:
          path: "www/"
          name: ${{inputs.artifact-name}}


##################################################################################
#         Links
##################################################################################

# Create a reusable workflow to build deployment app
# https://colinsalmcorner.com/musings-on-reusable-workflows/
