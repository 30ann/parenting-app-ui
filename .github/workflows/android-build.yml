##################################################################################
#         Configuration
##################################################################################
env:
  # Hardcoded default (testing purposes)
  BUILD_BRANCH_DEFAULT: deployment/plh_za
  # Secrets
  GOOGLE_SERVICES_JSON: ${{secrets.GOOGLE_SERVICES_JSON}}
  SIGNING_KEY: ${{secrets.SIGNING_KEY}}
  ALIAS: ${{secrets.ALIAS}}
  KEY_STORE_PASSWORD: ${{secrets.KEY_STORE_PASSWORD}}
  KEY_PASSWORD: ${{secrets.KEY_PASSWORD}}

##################################################################################
#         Main Code
##################################################################################
name: Android Build

# Only keep one active build per ref (e.g. pr branch, push branch, triggering workflow ref)
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - refactor/gh-actions
  workflow_call:
    inputs:
      build-branch:
        required: true
        type: string
        description: "Specify branch for deployment"
        default: "deployment/plh_za"

jobs:
#############################################################################
#         Configure build
#############################################################################
  configure_build:
    outputs:
      BUILD_BRANCH: ${{ steps.populate.outputs.BUILD_BRANCH }}
      DEPLOYMENT_NAME: ${{ steps.populate.outputs.DEPLOYMENT_NAME }}
      GIT_SHA: ${{ steps.populate.outputs.GIT_SHA }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
          ref: "${{github.event.inputs.build-branch}}"

      - name: Set Build Branch
        if: ${{ env.BUILD_BRANCH   }}
        run: |
          echo "BUILD_BRANCH=${{inputs.build-branch}}" >> $GITHUB_ENV

      - name: Set Default Build Branch
        if: ${{ !env.BUILD_BRANCH   }}
        run: |
          echo "BUILD_BRANCH=$BUILD_BRANCH_DEFAULT" >> $GITHUB_ENV
      
      # Extract deployment name as the slug of input build branch, e.g. /deployment/plh_tz -> plh_tz
      # https://stackoverflow.com/a/40524879/5693245
      - name: Set Environment Deployment
        run: |
          echo ${{env.BUILD_BRANCH}} | sed 's/.*\///'
          echo "DEPLOYMENT_NAME=$(echo ${{env.BUILD_BRANCH}} | sed 's/.*\///')" >> $GITHUB_ENV;  
        shell: bash

      - name: Set Git SHA
        run: |
          echo "SHA_SHORT=$(git rev-parse --short=6 HEAD)" >> $GITHUB_ENV

      - name: Populate Outputs
        id: populate
        run: |
          echo "BUILD_BRANCH=${{env.BUILD_BRANCH}}" >> $GITHUB_OUTPUT;
          echo "DEPLOYMENT_NAME=${{env.DEPLOYMENT_NAME}}" >> $GITHUB_OUTPUT;
          echo "GIT_SHA=${{env.GIT_SHA}}" >> $GITHUB_OUTPUT;

#############################################################################
#         Build web
#############################################################################
  web_build:
    needs: configure_build
    uses: ./.github/workflows/web-build.yml
    secrets: inherit
    with:
      branch: ${{ needs.configure_build.outputs.BUILD_BRANCH }}
      deployment-name: ${{ needs.configure_build.outputs.DEPLOYMENT_NAME }}

#############################################################################
#         Build android
#############################################################################    
  build_android:
    runs-on: ubuntu-latest
    needs: web_build
    env:
      DEPLOYMENT_NAME: ${{ needs.configure_build.outputs.DEPLOYMENT_NAME }}
      GIT_SHA: ${{ needs.configure_build.outputs.GIT_SHA }}
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
      #############################################################################
      #         Configure
      # Setup node same way as web build to allow calling `npx cap sync` command
      #############################################################################

      - name: Populate google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ env.GOOGLE_SERVICES_JSON }}
        run: echo $GOOGLE_SERVICES_JSON > android/app/google-services.json
      #############################################################################
      #         Sync web files
      # Setup node same way as web build to allow calling `npx cap sync` command
      #############################################################################
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x          
      - uses: actions/cache/restore@v3
        id: cache
        with:
          path: ./.yarn/cache
          key: ${{ runner.os }}-node-modules-yarn-v1-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-yarn-v1-
      - name: Install node modules
        run: yarn install --immutable
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: www
      - name: Extract Build folder
        run: |
          mkdir www
          tar -xf artifact.tar --directory www
      - name: Sync Android Files
        run: npx cap sync
      #############################################################################
      #         Android Build
      #############################################################################
        # Java version mapping: https://stackoverflow.com/a/47457251/5693245
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
          java-package: jdk
          cache: "gradle"
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: Build Android Debug APK
        working-directory: android
        run: ./gradlew :app:assembleDebug
      - name: Build Android Release Bundle
        working-directory: android
        run: ./gradlew :app:bundleRelease
      - name: Sign Android Release
        id: sign_aab
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: ./android/app/build/outputs/bundle/release
          signingKeyBase64: ${{ env.SIGNING_KEY }}
          alias: ${{ env.ALIAS }}
          keyStorePassword: ${{ env.KEY_STORE_PASSWORD }}
          keyPassword: ${{ env.KEY_PASSWORD }}
      #############################################################################
      #         Artifacts upload
      #############################################################################
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: release_bundle
          path: android/app/build/outputs/bundle/release/app-release.aab
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: debug_apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
