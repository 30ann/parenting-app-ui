##################################################################################
#         Configuration
##################################################################################
env:
  DEPLOYMENT_NAME: "plh_global"
  FIREBASE_CONFIG_TS: ${{secrets.FIREBASE_CONFIG_TS}}


##################################################################################
#         Main Code
##################################################################################
name: Build

# Only keep one active build per ref (e.g. pr branch, push branch, triggering workflow ref)
concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_call:
    inputs:
      artifact-name:
        description: Name of the artifact to upload
        type: string
        default: www
      build-flags:
        description: Additional flags to pass to build command (e.g. base-href)
        type: string
        default: ""
      deployment-name:
        description: Identifier of deployment to build
        type: string
        default: ""
      git-sha:
        description: "(optional) git sha to assign for use in error-handler post deployment"
        type: string
        default: ""
      should-lint:
        type: boolean
        default: true
      skip-upload:
        type: boolean
        default: false


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

        # TODO - populate firebase as part of deployment set
      - name: Populate firebaseConfig.ts
        if: ${{env.FIREBASE_CONFIG_TS}}
        run: echo $FIREBASE_CONFIG_TS > src/environments/firebaseConfig.ts

      - name: Populate Git Sha
        if: inputs.git-sha != ''
        env:
          GIT_SHA: ${{inputs.git-sha}}
        run: echo "export const GIT_SHA = \"$GIT_SHA\";" > src/environments/sha.ts

      - name: Set deployment name
        if: ${{github.inputs.deployment-name}}
        run: echo "DEPLOYMENT_NAME=${{github.inputs.deployment-name}} >> $GITHUB_ENV

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ./.yarn/cache
          # If cachebusting required (e.g. breaking yarn changes on update) change `v1` to another number
          key: ${{ runner.os }}-node-modules-yarn-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-yarn-v1-

      - name: Install node modules
        run: yarn install

      # Ensure required packages built to enable deployment set
      # TODO - should add implicit dep to scripts when NX added
      - name: Precompile
        run: yarn scripts compile types

      - name: Set deployment
        run: yarn workflow deployment set ${{env.DEPLOYMENT_NAME}}


      # Optional lint step before build (used as part of lint test)
      - name: Lint
        if: ${{inputs.should-lint}}
        run:

      - name: Build
        run: yarn build ${{inputs.build-flags}}

        # Use github pages upload artifact action to compress and upload
      - name: Upload artifact
        if: !${{inputs.skip-upload}}
        uses: actions/upload-pages-artifact@v1.0.8
        with:
          path: "www/"
          name: ${{inputs.artifact-name}}

##################################################################################
#         Links
##################################################################################

# Create a reusable workflow to build deployment app
# https://colinsalmcorner.com/musings-on-reusable-workflows/
