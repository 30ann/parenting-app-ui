@use "sass:color";
@use "sass:map";
@use "./contrast-colour.scss";

// Returns a map of colours based partly on Material Design's colour system
// https://material.io/design/color/the-color-system.html
@function getColorPalette($primary, $secondary, $page-background: null) {
  $result: (
    "color-primary": $primary,
    "color-primary-50": color.change($primary, $lightness: 95%),
    "color-primary-100": color.change($primary, $lightness: 90%),
    "color-primary-200": color.change($primary, $lightness: 80%),
    "color-primary-300": color.change($primary, $lightness: 70%),
    "color-primary-400": color.change($primary, $lightness: 60%),
    "color-primary-500": color.change($primary, $lightness: 50%),
    "color-primary-600": color.change($primary, $lightness: 40%),
    "color-primary-700": color.change($primary, $lightness: 30%),
    "color-primary-800": color.change($primary, $lightness: 20%),
    "color-primary-900": color.change($primary, $lightness: 10%),
    "color-primary-contrast": contrast-colour.choose-contrast-color($primary),
    "color-secondary": $secondary,
    "color-secondary-50": color.change($secondary, $lightness: 95%),
    "color-secondary-100": color.change($secondary, $lightness: 90%),
    "color-secondary-200": color.change($secondary, $lightness: 80%),
    "color-secondary-300": color.change($secondary, $lightness: 70%),
    "color-secondary-400": color.change($secondary, $lightness: 60%),
    "color-secondary-500": color.change($secondary, $lightness: 50%),
    "color-secondary-600": color.change($secondary, $lightness: 40%),
    "color-secondary-700": color.change($secondary, $lightness: 30%),
    "color-secondary-800": color.change($secondary, $lightness: 20%),
    "color-secondary-900": color.change($secondary, $lightness: 10%),
    "color-secondary-contrast": contrast-colour.choose-contrast-color($secondary),
    "color-page-background": color.change($primary, $lightness: 95%),
    //  GRADIENTS
    // primary-gradient
    "gradient-primary-start": color.adjust($primary, $lightness: 33%),
    "gradient-primary-end": color.adjust($primary, $saturation: 2%, $lightness: 13%),
    // secondary-gradient
    "gradient-secondary-start": color.adjust($secondary, $saturation: 4%),
    "gradient-secondary-end": color.adjust($secondary, $saturation: 5%, $lightness: -19%),
  );
  @if ($page-background != null) {
    $result: map.set($result, "color-page-background", $page-background);
  }
  @return $result;
}
@mixin generateTheme($p, $s, $bg: null) {
  $colorPalette: getColorPalette($p, $s, $bg);
  @include colorVariables($colorPalette);
}

@mixin colorVariables($sourceColorPalette) {
  $colorPalette: $sourceColorPalette;

  --ion-color-primary: #{map.get($colorPalette, "color-primary")};
  --ion-color-primary-50: #{map.get($colorPalette, "color-primary-50")};
  --ion-color-primary-100: #{map.get($colorPalette, "color-primary-100")};
  --ion-color-primary-200: #{map.get($colorPalette, "color-primary-200")};
  --ion-color-primary-300: #{map.get($colorPalette, "color-primary-300")};
  --ion-color-primary-400: #{map.get($colorPalette, "color-primary-400")};
  --ion-color-primary-500: #{map.get($colorPalette, "color-primary-500")};
  --ion-color-primary-600: #{map.get($colorPalette, "color-primary-600")};
  --ion-color-primary-700: #{map.get($colorPalette, "color-primary-700")};
  --ion-color-primary-800: #{map.get($colorPalette, "color-primary-800")};
  --ion-color-primary-900: #{map.get($colorPalette, "color-primary-900")};
  --ion-color-primary-contrast: #{map.get($colorPalette, "color-primary-contrast")};

  --ion-color-secondary: #{map.get($colorPalette, "color-secondary")};
  --ion-color-secondary-50: #{map.get($colorPalette, "color-secondary-50")};
  --ion-color-secondary-100: #{map.get($colorPalette, "color-secondary-100")};
  --ion-color-secondary-200: #{map.get($colorPalette, "color-secondary-200")};
  --ion-color-secondary-300: #{map.get($colorPalette, "color-secondary-300")};
  --ion-color-secondary-400: #{map.get($colorPalette, "color-secondary-400")};
  --ion-color-secondary-500: #{map.get($colorPalette, "color-secondary-500")};
  --ion-color-secondary-600: #{map.get($colorPalette, "color-secondary-600")};
  --ion-color-secondary-700: #{map.get($colorPalette, "color-secondary-700")};
  --ion-color-secondary-800: #{map.get($colorPalette, "color-secondary-800")};
  --ion-color-secondary-900: #{map.get($colorPalette, "color-secondary-900")};
  --ion-color-secondary-contrast: #{map.get($colorPalette, "color-secondary-contrast")};

  --ion-background-color: #{map.get($colorPalette, "color-page-background")};

  // BORDERS
  --ion-border-standard: 2px solid #{map.get($colorPalette, "color-primary")};
  --ion-border-thin-standard: 1px solid #{map.get($colorPalette, "color-primary")};
  --ion-border-color-secondary: 2px solid #{map.get($colorPalette, "color-secondary")};
  --ion-border-light: 1px solid #{map.get($colorPalette, "light")};
  --ion-border-light-thicker: 2px solid #{map.get($colorPalette, "light")};
  --border-dashed: 2px dashed #{map.get($colorPalette, "color-primary")};

  //  GRADIENTS
  //Gradient direction
  $vertical: 180deg;
  $horizontal: 90deg;

  // COMPONENTS
  // Buttons
  --ion-btn-primary: linear-gradient(
    #{$vertical},
    #{map.get($colorPalette, "gradient-primary-start")} 0.43%,
    #{map.get($colorPalette, "gradient-primary-end")} 74.07%
  );
  --ion-btn-secondary: linear-gradient(
    #{$vertical},
    #{map.get($colorPalette, "gradient-secondary-start")} 28.12%,
    #{map.get($colorPalette, "gradient-secondary-end")} 100%
  );
  --ion-btn-control-bg: #{color.adjust(
      map.get($colorPalette, "color-primary"),
      $hue: 3.6deg,
      $saturation: 3%,
      $lightness: 25%
    )};
}
